{"ast":null,"code":"var _jsxFileName = \"/Users/chloe/Desktop/react-voxspot/voxspot-web/src/components/map/map.js\";\nimport React, { Component } from 'react';\nimport GoogleMapReact from 'google-map-react';\nimport ReactDOMServer from \"react-dom/server\";\nimport infoWindow from \"../map/infoWindow\";\n\nclass SimpleMap extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      myLatLng: {\n        lat: -37.813629,\n        lng: 144.963058\n      },\n      info: '',\n      zoom: 13\n    };\n  }\n\n  renderMarkers(map, maps, position, c) {\n    var infowindow = new maps.InfoWindow({\n      content: ''\n    });\n    let marker = new maps.Marker({\n      position: position,\n      map,\n      title: 'Hello World!'\n    });\n    marker.addListener('click', function () {\n      const content = ReactDOMServer.renderToString(c);\n      infowindow.setContent(content);\n      infowindow.open(map, marker);\n    });\n  }\n\n  componentDidMount() {\n    if (this.props.match.params.id) {\n      let url = 'http://localhost:8000/share/' + this.props.match.params.id;\n      fetch(url).then(results => {\n        return results.json();\n      }).then(data => {\n        this.setState({\n          myLatLng: {\n            lat: data.location.coordinates[1],\n            lng: data.location.coordinates[0]\n          },\n          info: data\n        });\n        console.log(this.state.myLatLng);\n      });\n    }\n  }\n\n  render() {\n    return (// Important! Always set the container height explicitly\n      React.createElement(\"div\", {\n        style: {\n          height: '100vh',\n          width: '100%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(GoogleMapReact, {\n        bootstrapURLKeys: {\n          key: 'AIzaSyAtdOKKhJNvoNFVMIy20Upt7OLv1lHZJaI'\n        },\n        onGoogleApiLoaded: ({\n          map,\n          maps\n        }) => this.renderMarkers(map, maps, this.state.myLatLng, React.createElement(\"infoWindow\", {\n          b_type: this.state.info.b_type,\n          details: this.state.info.details,\n          end_date: this.state.info.end_date,\n          start_date: this.state.info.start_date,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        })),\n        defaultCenter: this.props.center,\n        center: this.state.myLatLng,\n        yesIWantToUseGoogleMapApiInternals: true,\n        defaultZoom: this.state.zoom,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }))\n    );\n  }\n\n}\n\nSimpleMap.defaultProps = {\n  center: {\n    lat: -37.813629,\n    lng: 144.963058\n  },\n  zoom: 11\n};\nexport default SimpleMap;","map":{"version":3,"sources":["/Users/chloe/Desktop/react-voxspot/voxspot-web/src/components/map/map.js"],"names":["React","Component","GoogleMapReact","ReactDOMServer","infoWindow","SimpleMap","constructor","props","state","myLatLng","lat","lng","info","zoom","renderMarkers","map","maps","position","c","infowindow","InfoWindow","content","marker","Marker","title","addListener","renderToString","setContent","open","componentDidMount","match","params","id","url","fetch","then","results","json","data","setState","location","coordinates","console","log","render","height","width","key","b_type","details","end_date","start_date","center","defaultProps"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport GoogleMapReact from 'google-map-react';\nimport ReactDOMServer from \"react-dom/server\";\nimport infoWindow from \"../map/infoWindow\";\n\nclass SimpleMap extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      myLatLng : {\n        lat: -37.813629,\n        lng: 144.963058\n      },\n      info:'',\n      zoom:13\n    }\n  }\n\n  static defaultProps = {\n    center: {\n      lat: -37.813629,\n      lng: 144.963058\n    },\n    zoom: 11\n  };\n  renderMarkers(map, maps, position, c) {\n    var infowindow = new maps.InfoWindow({\n      content:''\n    });\n    let marker = new maps.Marker({\n      position: position,\n      map,\n      title: 'Hello World!',\n\n    });\n      marker.addListener('click', function() {\n        const content = ReactDOMServer.renderToString(c);\n        infowindow.setContent(content); \n        infowindow.open(map, marker);\n  })\n  }\n  componentDidMount(){\n    if(this.props.match.params.id){\n      let url='http://localhost:8000/share/'+this.props.match.params.id\n      fetch(url)\n      .then(results => {\n        return results.json();\n      })\n      .then(data => {\n        this.setState(\n          {\n            myLatLng:{\n            lat: data.location.coordinates[1],\n            lng: data.location.coordinates[0]\n          },\n          info: data\n          });\n        console.log(this.state.myLatLng)\n      })\n  \n    }\n\n  }\n  render (){\n  return (\n     // Important! Always set the container height explicitly\n     <div style={{ height: '100vh', width: '100%' }}>\n     <GoogleMapReact\n       bootstrapURLKeys={{ key: 'AIzaSyAtdOKKhJNvoNFVMIy20Upt7OLv1lHZJaI' }}\n       onGoogleApiLoaded={({map, maps}) => this.renderMarkers(map, maps, this.state.myLatLng, <infoWindow b_type={this.state.info.b_type} details={this.state.info.details}\n        end_date={this.state.info.end_date} start_date={this.state.info.start_date}\n      />)}\n       defaultCenter={this.props.center}\n       center={this.state.myLatLng}\n       yesIWantToUseGoogleMapApiInternals\n       defaultZoom={this.state.zoom}\n     >\n     </GoogleMapReact>\n   </div>\n  );\n}\n}\n\nexport default SimpleMap;\n"]},"metadata":{},"sourceType":"module"}